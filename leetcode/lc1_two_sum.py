"""
Solution for LC#1: Two Sum
https://leetcode.com/problems/two-sum/
"""
import unittest


class Solution:
    def twoSum(self, nums: list[int], target: int) -> list[int]:
        if len(nums) == 2:
            return [0, 1]

        database_of_numbers = {}
        for index, value in enumerate(nums):
            database_of_numbers[value] = index

        for index, value in enumerate(nums):
            desirable_number = target - value
            desirable_index = database_of_numbers.get(desirable_number)
            if desirable_index is not None and desirable_index != index:
                return [index, desirable_index]


class TestSolution(unittest.TestCase):
    def setUp(self) -> None:
        self.solution = Solution()

    def test_example_1(self):
        nums = [2, 7, 11, 15]
        target = 9
        self.assertEqual([0, 1], self.solution.twoSum(nums, target))

    def test_example_2(self):
        nums = [3, 2, 4]
        target = 6
        self.assertEqual([1, 2], self.solution.twoSum(nums, target))

    def test_example_3(self):
        nums = [3, 3]
        target = 6
        self.assertEqual([0, 1], self.solution.twoSum(nums, target))

    def test_example_5(self):
        nums = [-1, -2, -3, -4, -5]
        target = -8
        self.assertEqual([2, 4], self.solution.twoSum(nums, target))

    def test_example_6(self):
        nums = [1, 3, 4, 2]
        target = 6
        self.assertEqual([2, 3], self.solution.twoSum(nums, target))

    def test_example_7(self):
        # fmt:off
        nums = [4742263,-1251372,-8572325,-5849876,1324437,-8952702,-9069471,3430459,9532049,3856391,8236560,9644501,-5973061,-219451,5552688,305456,-6216368,30569,1112314,9934564,-6284333,9969315,6633890,-4337177,-661741,-3207336,-3696478,4372873,5653250,-2961903,7265417,4885372,9172661,4296841,8583269,5751896,-5938444,-8919809,7130782,8335454,2944705,-2794087,7672289,-4147017,9164121,7473023,-4712178,-5940795,-9976315,2721845,-2139460,9859224,2542055,5822255,-6435755,-7299967,-5347111,8368640,-3374449,-2646752,1241277,2297398,5629090,9034845,-7310243,-8246287,8463292,6565623,-4099185,-5838634,474485,-171629,3849649,-3170899,2990003,-5575873,6083997,-2741612,4442816,-7264699,9457095,4851118,-6471199,6300361,8217061,-2963030,850817,-2802946,-2476914,6953315,6359150,-1180752,-604600,4035074,-644206,2773714,1164536,2820724,8487259,2126197,-2680659,1789983,9601611,-7054804,-7714252,3173140,5017141,-7127723,-3171189,2259472,5762789,9368545,-5163985,3209970,-3957219,-6953615,-8056027,4334368,-9469673,6833362,-5271746,-9054805,6920443,5690431,8418631,-2226720,1021877,-8511711,-3611437,-4724127,483312,-422546,2999205,-9457227,-1960931,-5038592,-8916531,9229288,-8841728,-5422933,-8529677,6996197,-472356,-2425684,7408723,-2402538,-8426308,-9858316,4419245,-6659557,874088,-4176724,-2573042,3601924,-2022369,1690194,1037592,-1672352,-7192698,3204906,361897,-6657498,-3502520,3848504,-5804435,-3140633,-6097235,-2780915,5570012,-7146984,3490491,-8307288,-6959928,6683091,3262306,-5078568,-2484259,-1283658,-5878551,3386576,3094043,2074122,-9108561,-7408619,-8579481,-7941539,-6470148,-5423938,-4013903,3869936,-3253638,-2496436,500594,5895792,-3671908,593464,-3270230,-443728,8404228,7861142,-7727474,1558068,7742854,456200,-6146377,823853,-828766,6133620,-1821886,1539637,-9639132,-3574878,-4153479,524354,-9603127,859823,9358369,4588594,-9672170,-6244180,64911,-7601729,2745497,7977625,-8153571,-9347850,-2338182,-2252983,2274918,1055777,5804578,-216947,-5329769,9885605,-9477421,3032050,-7912912,-5887392,-715762,6760847,-1070648,3087924,8659191,-9949084,9969274,-7269188,-9590389,-6986858,1418344,2439543,-2868944,-954973,7330004,-9529244,-9201855,-1018947,-2228851,7642529,8308599,-1194427,-6786564,-1991956,-6681191,-2378204,5128127,6424533,4808826,2687969,-5491295,8250039,-8373657,-8657034,-7408327,-7179846,9864129,-3801441,3581701,-3886072,-5614785,-3661681,5364688,8221505,6609128,3273041,9142023,-6041256,-9326373,2001517,9895366,3242658,4690965,-9372905,-7586160,2709886,8730120,2950692,5627439,-2500198,-5748174,6924689,2289522,-6829715,-3415044,1986467,4299505,-7440452,5148831,-7467145,6556063,2187637,124086,2187115,-378528,-7321421,896659,9491588,-9365785,-8802696,-808308,-8221187,802780,-8491872,8610843,1629010,-7651682,-6379094,7094657,-2685437,-8164498,8426554,6233565,478785,6764158,1973542,-9165871,-4613374,-4443914,-953363,4125028,-9762360,2645266,-2063728,-4689934,-2258999,45632,-388343,-8683501,9295279,-6179506,8220186,-7704711,8376271,2557717,2889693,-5753034,8419051,-7693467,3149234,-2587100,-9227583,-6231217,7951898,2111846,2903101,8575235,5442784,-2068794,8128567,5255974,3058617,-8427445,2849554,-436972,4999426,6508833,-2128458,5752366,-507325,-3917091,6032687,-3216695,-2657187,1018702,2992339,9036592,6016257,5965862,8938898,6200499,-3568810,-5095786,-7823547,-710820,-2529119,8662345,-8005436,-8042897,4932274,7647235,-6101347,-432394,-5327216,3169876,9915708,-6368057,-6327154,7184625,-1666304,-8376001,-4318071,-5686706,5731948,-7470421,7710478,-3235484,-8547174,-4029430,6545494,2170359,6734198,-4466559,-1926563,761367,-973374,5392413,4696655,-5621093,-7733991,-3454637,-4594657,-8303895]
        # fmt: on
        target = 3490891
        self.assertEqual([0, 1], self.solution.twoSum(nums, target))
